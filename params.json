{
  "name": "Nervousnet-android",
  "tagline": "Extra sensors to track app activity.",
  "body": "### NervousNet -[@KingsBSD](https://twitter.com/kingsBSD) [Hackathon](http://www.nervousnet.ethz.ch/hackathon/) Edition\r\n\r\n[NervousNet](http://www.nervousnet.ethz.ch/) is a reaction to the current state of affairs where users have little control over the data their mobile devices create.\r\n\r\nAs it stands, the app gives users the means to collect and share a wide variety of sensor data. However, what can be done to help them gain understanding of the data their existing apps create?\r\n\r\n\r\nIs a true \"digital democracy\" even possible with current mobile platforms? Unless users unlock the bootloaders on their Android devices to root them, they cannot access the internal SQLite databases that contain information about **them**. To this end, we have added an \"Export Database\" option that places a .sqlite database containing all the data collected by NervousNet in the \"Downloads\" folder of the device, where it can be viewed with third-party apps, or processed with external tools such as the [Python standard library](https://docs.python.org/2/library/sqlite3.html). The Android [database helper](https://github.com/kingsBSD/nervousnet-android/blob/alt-master-kingsbsd/nervousnetrel_AndroidStudio/nervousnetrel/src/main/java/ch/ethz/soms/nervous/utils/NervousData.java) class has been completed.\r\n\r\n\r\n![SQLite Export](https://raw.githubusercontent.com/kingsBSD/nervousnet-android/gh-pages/images/nervous_export.png)\r\n\r\n\r\n### [MobileMiner](http://kingsbsd.github.io/MobileMiner/)\r\n\r\nOur previous project [Our Data Ourselves](https://big-social-data.net/) involved the creation of our [MobileMiner](http://kingsbsd.github.io/MobileMiner/) app, which was able to gather significant information about the activity of other apps. We have implemented three of the methods used as sensors with our version of NervousNet.\r\n \r\n1 Notifications. By prompting the user to enable the app as an \"[accessibility service](https://github.com/kingsBSD/nervousnet-android/blob/alt-master-kingsbsd/nervousnetrel_AndroidStudio/nervousnetrel/src/main/java/ch/ethz/soms/nervous/android/NotificationService.java)\" it is possible to log when internet-enabled apps send notifications to the user. We have [shown](http://www.slideshare.net/kingsBSD/net-sci2015) that the number of notifications that Twitter sends a user is a reasonable indication of the numer of accounts they follow. Here's a chart plotted by NervousNet showing a single notification:\r\n![Notification Chart](https://raw.githubusercontent.com/kingsBSD/nervousnet-android/gh-pages/images/1stchart.png)\r\n \r\n2 Sockets. It is (sometimes) possible to determine which apps have opened network sockets by [polling](https://github.com/kingsBSD/nervousnet-android/blob/alt-master-kingsbsd/nervousnetrel_AndroidStudio/nervousnetrel/src/main/java/ch/ethz/soms/nervous/android/sensors/SocketSensor.java) the /proc/net/ directory for the PID of each app installed on the device. This method yields the protocol and port of the socket, it is interesting to see which apps use SSL on port 443. The various group permissions of the underlying Linux system means that this is not always possible, but browsers, media players and some games work well. MobileMiner acquires this data at a far higher frequency than is perhaps appropriate for NervousNet. Here we see a SQLite dump that shows NervousNet instrospecting its own socket usage!\r\n\r\n![Nervous Sockets](https://raw.githubusercontent.com/kingsBSD/nervousnet-android/gh-pages/images/socket5s.png)\r\n\r\n3 Network Traffic. When socket usage can't be determined for an app, the Android traffic statistics API *might* work. -The documentation doesn't explain why this information is sometimes withheld for some apps. Again, by [polling](https://github.com/kingsBSD/nervousnet-android/blob/alt-master-kingsbsd/nervousnetrel_AndroidStudio/nervousnetrel/src/main/java/ch/ethz/soms/nervous/android/sensors/SensorDescTraffic.java) this API, we can track the network behavious of many apps.\r\n\r\n![Nervous Traffic](https://raw.githubusercontent.com/kingsBSD/nervousnet-android/gh-pages/images/trafficdata.png)\r\n\r\n### Going Further:\r\n\r\n\r\nSome \"nice-to-haves\" that didn't make the cut...\r\n\r\n1 Write an app filter activity. It doesn't really make sense to vary the frequency of collection of discrete events like notifications. All the app-based sensors should have a blacklist of apps whos behaviour they don't log. An option to automatically ignore \"mature content\" might help.\r\n\r\n\r\n2 Build per-app visualisations. Drill down and see which apps have the most activity. Maybe include a multi-line chart for ports 80, 443, and others for the socket data.\r\n\r\n\r\n3 Include a setting to start the sensor service automatically on booting the device. Our MobileMiner already does this because a user asked for it! It should probably default to \"off\".\r\n\r\n4 Have a setting to only upload when connected via WiFi. MobileMiner *only* talks to it's CKAN instance when the device has a wireless connection.\r\n\r\n\r\n### Further reading / viewing:\r\n\r\n1 [Mining Mobile Youth Cultures](https://bigsocialdata.files.wordpress.com/2015/02/blanke-big-humanities-2014.pdf) -An introduction to our project and app.\r\n\r\n\r\n2 [Our blog.](https://twitter.com/kingsBSD).\r\n\r\n\r\n3 [Hacking the Social Life of Big Data](http://bds.sagepub.com/content/2/2/2053951715616649).\r\n\r\n4 [Video](https://www.youtube.com/watch?v=hjjniizB794) and [slides](http://www.slideshare.net/kingsBSD/pydata-2015-odo) from [PyData London].\r\n\r\n## Epilogue:\r\nWe ran a [hack-day](https://big-social-data.net/2015/05/16/masterclass-hacking-the-mobile-ecosystem/) where things were actually [hacked](http://kingsbsd.github.io/DroidDestructionKit/)!\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}